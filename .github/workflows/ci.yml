name: ci

on: [push]

jobs:
  fern-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Fern
        run:  npm install -g fern-api

      - name: Check Fern API is valid
        run: fern check

  fern-generate-java:
    needs: fern-check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/java@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release Java SDK
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: |
          tag=${{ github.ref_name }}
          prefix="java@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --group java-sdk --version "$SDK_VERSION" --log-level debug
      
      - name: Create Github release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: "${{ github.ref_name }}",
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.ref_name }}",
            });

  fern-generate-go:
    needs: fern-check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/go@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release Go SDK
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          tag=${{ github.ref_name }}
          prefix="go@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --group go-sdk --version "$SDK_VERSION" --log-level debug
      
      - name: Create Github release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: "${{ github.ref_name }}",
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.ref_name }}",
            });

  
  fern-generate-node:
    needs: fern-check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/node@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release Node SDK
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          tag=${{ github.ref_name }}
          prefix="node@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --group node-sdk --version "$SDK_VERSION" --log-level debug
      
      - name: Create Github release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: "${{ github.ref_name }}",
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.ref_name }}",
            });

  
  fern-generate-python:
    needs: fern-check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/python@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release PYTHON SDK
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          tag=${{ github.ref_name }}
          prefix="python@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --group python-sdk --version "$SDK_VERSION" --log-level debug
      
      - name: Create Github release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: "${{ github.ref_name }}",
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.ref_name }}",
            });

  notify_slack_on_failure:
    needs: [fern-check, fern-generate-java, fern-generate-go, fern-generate-node, fern-generate-python]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Failed to create a release for the Fern API SDKs"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: Workflow failed: ${{ github.workflow }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Event:*\n${{ github.event_name }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text":{
                        "type": "plain_text",
                        "text": "Inspect Workflow Run"
                      },
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
